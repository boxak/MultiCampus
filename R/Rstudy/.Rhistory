else if(any(is.na(v))){
warning("NA를 최저값으로 변경하여 처리함!!")
smallest <- 98798787
for(i in 1:length(v)){
if(!is.na(v[i]) & v[i]<smallest){
v[i] <- smallest
}
}
print(smallest)
for(i in 1:length(v)){
if(is.na(v[i])){
v[i] <- smallest
}
}
}
sum1 <- 0
sum2 <- 0
for(i in 1:length(v)){
if(i%%2==1){
sum1 <- sum1+v[i]
}
else{
sum2 <- sum2+v[i]
}
}
List <- list(
oddSum = sum1,
evenSum = sum2
)
return(List)
}
mySum(c(1,2,3,NA,5,6,7,8,NA,10))
mySum <- function(v){
List <- NULL
if(is.null(v)){
return()
}
if(!is.vector(v)){
stop("벡터만 처리가능!!")
}
else if(any(is.na(v))){
warning("NA를 최저값으로 변경하여 처리함!!")
smallest <- 98798787
for(i in 1:length(v)){
if(!is.na(v[i]) & v[i]<smallest){
smallest <- v[i]
}
}
print(smallest)
for(i in 1:length(v)){
if(is.na(v[i])){
v[i] <- smallest
}
}
}
sum1 <- 0
sum2 <- 0
for(i in 1:length(v)){
if(i%%2==1){
sum1 <- sum1+v[i]
}
else{
sum2 <- sum2+v[i]
}
}
List <- list(
oddSum = sum1,
evenSum = sum2
)
return(List)
}
mySum(c(1,2,3,NA,5,6,7,8,NA,10))
mySum(matrix(1:10,nrow=5))
myExpr <- function(fun){
if(is.function(fun)){
stop("수행 안할꺼임!!")
}
else{
return(fun(sample(1:45,6)))
}
}
myExpr(mySum)
myExpr(mySum())
myExpr(vmSum)
myExpr(vmSum)
myExpr <- function(fun){
return(fun(sample(1:45,6)))
if(is.function(fun)){
stop("수행 안할꺼임!!")
}
else{
return(fun(sample(1:45,6)))
}
}
myExpr(vmSum)
myExpr <- function(fun){
if(!is.function(fun)){
stop("수행 안할꺼임!!")
}
else{
return(fun(sample(1:45,6)))
}
}
myExpr(vmSum)
myExpr(mySum)
myExpr(mySum)
myExpr(vmSum)
myExpr(vmSum2)
createVector1 <- function(...){
data <- c(...)
if(is.null(data)){
return()
}
else if(any(is.na(data))){
return(NA)
}
else{
return(data)
}
}
createVector1(c(T,F,F,T))
createVector1(c(NA,F,F,T))
createVector1()
createVector1(c(T,NA,F,T))
createVector1(c(T,F,F,T))
createVector1(c(T,"B","a",1,100,"-1"))
createVector2 <- function(...){
data <- c(...)
List <- NULL
if(is.null(data)){
return()
}
else{
for(element in data){
List <- c(List,element)
}
return(List)
}
}
createVector2(c(1:5,2:10))
createVector2 <- function(...){
data <- c(...)
List <- NULL
if(is.null(data)){
return()
}
else{
for(element in data){
List$element = element
}
return(List)
}
}
createVector2(c(1:5,2:10))
createVector2 <- function(...){
data <- c(...)
List <- NULL
if(is.null(data)){
return()
}
else{
for(element in data){
List <- c(List,element)
}
return(List)
}
}
createVector2 <- function(...){
data <- c(...)
List <- NULL
if(is.null(data)){
return()
}
else{
for(element in data){
List <- c(List,element)
}
return(List)
}
}
createVector2(c(1:5,2:10))
getwd()
data1 <- scan("data/iotest1.txt")
data1
paste0("오름차순:",sort(data1))
cat("오름차순:",sort(data1))
sorting1 <- sort(data1)
sorting2 <- sort(data1,decreasing = TRUE)
sum <- sum(data1)
mean <- mean(data1)
cat("오름차순:",sorting1,"\n")
cat("내림차순:",sorting2,"\n")
cat("오름차순:",sorting1,"\n")
cat("내림차순:",sorting2,"\n")
cat("합:",sum,"\n")
cat("평균:",mean,"\n")
test1 <- data.frame(
오름차순 = sorting1,
내림차순 = sorting2,
합 = sum,
평균 = mean
)
test1
View(test1)
as.character(sorting1)
as.string(sorting1)
str1 <- ""
str2 <- ""
for(i in 1:length(data1)){
paste(str1,sorting1[i])
paste(str2,sorting2[i])
}
str1;str2
length(data1)
paste(str1,sorting1[1])
str1 <- ""
str2 <- ""
for(i in 1:length(data1)){
paste0(str1,sorting1[i]," ")
paste0(str2,sorting2[i]," ")
}
str1;str2
str1 <- ""
str2 <- ""
for(i in 1:length(data1)){
str1 <- paste0(str1,sorting1[i]," ")
str2 <- paste0(str2,sorting2[i]," ")
}
str1;str2
str1 <- ""
str2 <- ""
for(i in 1:length(data1)){
str1 <- paste(str1,sorting1[i])
str2 <- paste(str2,sorting2[i])
}
str1;str2
str1 <- sorting1[1]
str2 <- sorting2[1]
for(i in 2:length(data1)){
str1 <- paste(str1,sorting1[i])
str2 <- paste(str2,sorting2[i])
}
str1;str2
data1 <- scan("data/iotest1.txt")
sorting1 <- sort(data1)
sorting2 <- sort(data1,decreasing = TRUE)
sum <- sum(data1)
mean <- mean(data1)
cat("오름차순:",sorting1,"\n")
cat("내림차순:",sorting2,"\n")
cat("합:",sum,"\n")
cat("평균:",mean,"\n")
str1 <- sorting1[1]
str2 <- sorting2[1]
for(i in 2:length(data1)){
str1 <- paste(str1,sorting1[i])
str2 <- paste(str2,sorting2[i])
}
str1;str2
test1 <- data.frame(
오름차순 = sorting1,
내림차순 = sorting2,
합 = sum,
평균 = mean
)
test1
str1;str2
test1 <- data.frame(
오름차순 = str1,
내림차순 = str2,
합 = sum,
평균 = mean
)
test1
View(test1)
rm(test1)
data2 <- scan("data/iotest2.txt")
data2 <- scan("data/iotest2.txt",what="")
data2
mySum(matrix(1:10,nrow=5))
data2 <- scan("data/iotest2.txt",what="")
data2
str(count)
str(data2)
data2 <- scan("data/iotest2.txt",what="")
keyList <- vector()
data2 <- sort(data2)
data2
keyList <- data2[1]
for(i in 2:length(data2)){
if(data2[i]!=data2[i-1]){
keyList <- c(keyList,data2[i])
}
}
keyList
countList <- rep(0,length(keyList))
countList
myExpr(vmSum)
countList <- rep(1,length(keyList))
countList <- rep(1,length(keyList))
inx <- 1
for(i in 2:length(data2)){
if(data2[i]==data2[i-1]){
countList[inx] <- countList[inx]+1
}
else{
inx <- inx+1
}
}
countList
maxInx <- which(max(countList))
maxInx
maxInx <- which.max(countList)
maxInx
paste0("가장 많이 등장한 단어는 ",keyList[maxInx]," 입니다")
createVector2(c(1:5,2:10))
createVector2 <- function(...){
data <- c(...)
List <- list()
if(is.null(data)){
return()
}
else{
for(element in data){
List <- c(List,element)
}
return(List)
}
}
createVector2(c(1:5,2:10))
createVector2 <- function(...){
data <- c(...)
List <- list()
if(is.null(data)){
return()
}
else{
for(element in data){
print(element)
}
return(List)
}
}
createVector2(c(1:5,2:10))
createVector2 <- function(...){
data <- c(...)
List <- list()
if(is.null(data)){
return()
}
else{
for(element in data){
append(List,element)
}
return(List)
}
}
createVector2(c(1:5,2:10))
createVector2 <- function(...){
data <- c(...)
List <- list()
if(is.null(data)){
return()
}
else{
for(element in data){
List <- c(List,element)
}
return(List)
}
}
createVector2(c(1:5,2:10))
createVector2(c("A",10))
is.numeric("10")
createVector2(c("A",T))
createVector2 <- function(...){
data <- list(...)
List <- list()
if(is.null(data)){
return()
}
else{
num
char
bool
for(element in data){
if(is.numeric(element)){
num <- append(num,element)
}
else if(is.character(element)){
char <- append(char,element)
}
else{
bool <- append(bool,element)
}
}
List <- list(
numeric = num,
character = char,
logical = bool
)
return(List)
}
}
createVector2(c("A",T))
createVector2 <- function(...){
data <- list(...)
List <- list()
if(is.null(data)){
return()
}
else{
num <- list()
char <- list()
bool <- list()
for(element in data){
if(is.numeric(element)){
num <- append(num,element)
}
else if(is.character(element)){
char <- append(char,element)
}
else{
bool <- append(bool,element)
}
}
List <- list(
numeric = num,
character = char,
logical = bool
)
return(List)
}
}
createVector2(c("A",T))
createVector2 <- function(...){
data <- list(...)
List <- list()
if(is.null(data)){
return()
}
else{
num <- NULL
char <- NULL
bool <- NULL
for(element in data){
if(is.numeric(element)){
num <- append(num,element)
}
else if(is.character(element)){
char <- append(char,element)
}
else{
bool <- append(bool,element)
}
}
List <- list(
numeric = num,
character = char,
logical = bool
)
return(List)
}
}
createVector2("A",T)
createVector2("A",T,10,-1,"CD")
#[ 문제2 ]
#다음 사양의 함수 vmSum() 을 생성한다.
#	매개변수 : 1 개
#     리턴 값 : 숫자벡터
#      기능 : 전달받은 아규먼트가 벡터인 경우에만 기능을 수행한다.
#              벡터가 아니면 “벡터만 전달하숑!”라는 메시지를 리턴한다.
#              벡터라 하더라도 숫자 벡터가 아니면 “숫자 벡터를 전달하숑!” 라는
# 	      메시지를 출력하고 0 을 리턴한다.
#전달된 숫자 벡터의 모든 값을 더하여 리턴한다.
is.numeric
myExpr(c(1,2,3))
myExpr(mean)
myExpr(sum)
myExpr(vmSum2)
myExpr(sum())
myExpr(base.sum)
rm(sum)
myExpr(sum)
myExpr(sort)
myExpr(sort)
createVector2("A",T,10,-1,"CD")
createVector2("A CC",333,-3,F,T,10,-1,"CD")
변수 = 3;변수
rm(변수)
paste0("가장 많이 등장한 단어는 ",keyList[maxInx]," 입니다")
cat("오름차순:",sorting1,"\n")
cat("내림차순:",sorting2,"\n")
cat("합:",sum,"\n")
cat("평균:",mean,"\n")
data1 <- scan("data/iotest1.txt")
sorting1 <- sort(data1)
sorting2 <- sort(data1,decreasing = TRUE)
sum <- sum(data1)
mean <- mean(data1)
cat("오름차순:",sorting1,"\n")
cat("내림차순:",sorting2,"\n")
cat("합:",sum,"\n")
cat("평균:",mean,"\n")
#factor로 만들었으면 더 쉬웠을듯...
#table은 빈도 수를 집계해주는 함수
a <- table(data2)
class(a)
a
paste0("가장 많이 등장한 단어는 ",keyList[maxInx],"입니다")
fac <- factor(data2)
summary(fac)
